import requests
from bs4 import BeautifulSoup

def check_open_redirect(url):
    test_url = f"{url}/redirect?url=http://malicious.com"
    response = requests.get(test_url)
    if "malicious.com" in response.url:
        return True
    return False

def check_http_headers(url):
    response = requests.get(url)
    headers = response.headers
    missing_headers = []

    # Check for common security headers
    security_headers = {
        "X-Frame-Options": "DENY",
        "Content-Security-Policy": None,
        "X-Content-Type-Options": "nosniff",
        "X-XSS-Protection": "1; mode=block"
    }

    for header, expected in security_headers.items():
        if header not in headers:
            missing_headers.append(header)
        elif expected and headers[header] != expected:
            missing_headers.append(header)

    return missing_headers

def check_sensitive_files(url, sensitive_files):
    found_files = []
    for file in sensitive_files:
        response = requests.get(f"{url}/{file}")
        if response.status_code == 200:
            found_files.append(file)
    return found_files

def scan_website(url):
    print(f"Scanning {url}...\n")

    # Check for open redirects
    if check_open_redirect(url):
        print("Potential Open Redirect vulnerability found.")
    else:
        print("No Open Redirect vulnerabilities found.")

    # Check HTTP security headers
    missing_headers = check_http_headers(url)
    if missing_headers:
        print("Missing HTTP security headers:")
        for header in missing_headers:
            print(f" - {header}")
    else:
        print("All security headers are present.")

    # Check for sensitive files
    sensitive_files = ['.env', 'config.php', 'database.yml', 'backup.sql']
    found_files = check_sensitive_files(url, sensitive_files)
    if found_files:
        print("Found sensitive files:")
        for file in found_files:
            print(f" - {file}")
    else:
        print("No sensitive files found.")

# Example usage
if __name__ == "__main__":
    target_url = input("Enter the target URL (including http:// or https://): ")
    scan_website(target_url)
